#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace GoodsProject
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Commodity")]
	public partial class CommodityDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertTB_Brand(TB_Brand instance);
    partial void UpdateTB_Brand(TB_Brand instance);
    partial void DeleteTB_Brand(TB_Brand instance);
    partial void InsertTB_Log(TB_Log instance);
    partial void UpdateTB_Log(TB_Log instance);
    partial void DeleteTB_Log(TB_Log instance);
    partial void InsertTB_InWarehouse(TB_InWarehouse instance);
    partial void UpdateTB_InWarehouse(TB_InWarehouse instance);
    partial void DeleteTB_InWarehouse(TB_InWarehouse instance);
    partial void InsertTB_OutWarehouse(TB_OutWarehouse instance);
    partial void UpdateTB_OutWarehouse(TB_OutWarehouse instance);
    partial void DeleteTB_OutWarehouse(TB_OutWarehouse instance);
    partial void InsertTB_Goods(TB_Goods instance);
    partial void UpdateTB_Goods(TB_Goods instance);
    partial void DeleteTB_Goods(TB_Goods instance);
    partial void InsertTB_User(TB_User instance);
    partial void UpdateTB_User(TB_User instance);
    partial void DeleteTB_User(TB_User instance);
    #endregion
		
		public CommodityDBDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["CommodityConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CommodityDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CommodityDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CommodityDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CommodityDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TB_Brand> TB_Brand
		{
			get
			{
				return this.GetTable<TB_Brand>();
			}
		}
		
		public System.Data.Linq.Table<TB_Log> TB_Log
		{
			get
			{
				return this.GetTable<TB_Log>();
			}
		}
		
		public System.Data.Linq.Table<TB_InWarehouse> TB_InWarehouse
		{
			get
			{
				return this.GetTable<TB_InWarehouse>();
			}
		}
		
		public System.Data.Linq.Table<TB_OutWarehouse> TB_OutWarehouse
		{
			get
			{
				return this.GetTable<TB_OutWarehouse>();
			}
		}
		
		public System.Data.Linq.Table<TB_Goods> TB_Goods
		{
			get
			{
				return this.GetTable<TB_Goods>();
			}
		}
		
		public System.Data.Linq.Table<TB_User> TB_User
		{
			get
			{
				return this.GetTable<TB_User>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TB_Brand")]
	public partial class TB_Brand : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _BrandName;
		
		private string _IsShow;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _Remarks;
		
		private EntitySet<TB_Goods> _TB_Goods;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnBrandNameChanging(string value);
    partial void OnBrandNameChanged();
    partial void OnIsShowChanging(string value);
    partial void OnIsShowChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    #endregion
		
		public TB_Brand()
		{
			this._TB_Goods = new EntitySet<TB_Goods>(new Action<TB_Goods>(this.attach_TB_Goods), new Action<TB_Goods>(this.detach_TB_Goods));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandName", DbType="VarChar(50)")]
		public string BrandName
		{
			get
			{
				return this._BrandName;
			}
			set
			{
				if ((this._BrandName != value))
				{
					this.OnBrandNameChanging(value);
					this.SendPropertyChanging();
					this._BrandName = value;
					this.SendPropertyChanged("BrandName");
					this.OnBrandNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsShow", DbType="VarChar(1)")]
		public string IsShow
		{
			get
			{
				return this._IsShow;
			}
			set
			{
				if ((this._IsShow != value))
				{
					this.OnIsShowChanging(value);
					this.SendPropertyChanging();
					this._IsShow = value;
					this.SendPropertyChanged("IsShow");
					this.OnIsShowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="VarChar(500)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TB_Brand_TB_Goods", Storage="_TB_Goods", ThisKey="ID", OtherKey="BrandID")]
		public EntitySet<TB_Goods> TB_Goods
		{
			get
			{
				return this._TB_Goods;
			}
			set
			{
				this._TB_Goods.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TB_Goods(TB_Goods entity)
		{
			this.SendPropertyChanging();
			entity.TB_Brand = this;
		}
		
		private void detach_TB_Goods(TB_Goods entity)
		{
			this.SendPropertyChanging();
			entity.TB_Brand = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TB_Log")]
	public partial class TB_Log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ErrorContent;
		
		private System.Nullable<System.DateTime> _CreateTime;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnErrorContentChanging(string value);
    partial void OnErrorContentChanged();
    partial void OnCreateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateTimeChanged();
    #endregion
		
		public TB_Log()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorContent", DbType="VarChar(8000)")]
		public string ErrorContent
		{
			get
			{
				return this._ErrorContent;
			}
			set
			{
				if ((this._ErrorContent != value))
				{
					this.OnErrorContentChanging(value);
					this.SendPropertyChanging();
					this._ErrorContent = value;
					this.SendPropertyChanged("ErrorContent");
					this.OnErrorContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="Date")]
		public System.Nullable<System.DateTime> CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TB_InWarehouse")]
	public partial class TB_InWarehouse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _GoodsID;
		
		private System.Nullable<double> _NowCount;
		
		private System.Nullable<double> _InCount;
		
		private string _InUser;
		
		private System.Nullable<System.DateTime> _InDate;
		
		private string _InRemarks;
		
		private System.Nullable<double> _InPrice;
		
		private System.Nullable<double> _InMoney;
		
		private EntityRef<TB_Goods> _TB_Goods;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnGoodsIDChanging(string value);
    partial void OnGoodsIDChanged();
    partial void OnNowCountChanging(System.Nullable<double> value);
    partial void OnNowCountChanged();
    partial void OnInCountChanging(System.Nullable<double> value);
    partial void OnInCountChanged();
    partial void OnInUserChanging(string value);
    partial void OnInUserChanged();
    partial void OnInDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInDateChanged();
    partial void OnInRemarksChanging(string value);
    partial void OnInRemarksChanged();
    partial void OnInPriceChanging(System.Nullable<double> value);
    partial void OnInPriceChanged();
    partial void OnInMoneyChanging(System.Nullable<double> value);
    partial void OnInMoneyChanged();
    #endregion
		
		public TB_InWarehouse()
		{
			this._TB_Goods = default(EntityRef<TB_Goods>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoodsID", DbType="VarChar(32)")]
		public string GoodsID
		{
			get
			{
				return this._GoodsID;
			}
			set
			{
				if ((this._GoodsID != value))
				{
					if (this._TB_Goods.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGoodsIDChanging(value);
					this.SendPropertyChanging();
					this._GoodsID = value;
					this.SendPropertyChanged("GoodsID");
					this.OnGoodsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NowCount", DbType="Float")]
		public System.Nullable<double> NowCount
		{
			get
			{
				return this._NowCount;
			}
			set
			{
				if ((this._NowCount != value))
				{
					this.OnNowCountChanging(value);
					this.SendPropertyChanging();
					this._NowCount = value;
					this.SendPropertyChanged("NowCount");
					this.OnNowCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InCount", DbType="Float")]
		public System.Nullable<double> InCount
		{
			get
			{
				return this._InCount;
			}
			set
			{
				if ((this._InCount != value))
				{
					this.OnInCountChanging(value);
					this.SendPropertyChanging();
					this._InCount = value;
					this.SendPropertyChanged("InCount");
					this.OnInCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InUser", DbType="VarChar(32)")]
		public string InUser
		{
			get
			{
				return this._InUser;
			}
			set
			{
				if ((this._InUser != value))
				{
					this.OnInUserChanging(value);
					this.SendPropertyChanging();
					this._InUser = value;
					this.SendPropertyChanged("InUser");
					this.OnInUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InDate
		{
			get
			{
				return this._InDate;
			}
			set
			{
				if ((this._InDate != value))
				{
					this.OnInDateChanging(value);
					this.SendPropertyChanging();
					this._InDate = value;
					this.SendPropertyChanged("InDate");
					this.OnInDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InRemarks", DbType="VarChar(500)")]
		public string InRemarks
		{
			get
			{
				return this._InRemarks;
			}
			set
			{
				if ((this._InRemarks != value))
				{
					this.OnInRemarksChanging(value);
					this.SendPropertyChanging();
					this._InRemarks = value;
					this.SendPropertyChanged("InRemarks");
					this.OnInRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InPrice", DbType="Float")]
		public System.Nullable<double> InPrice
		{
			get
			{
				return this._InPrice;
			}
			set
			{
				if ((this._InPrice != value))
				{
					this.OnInPriceChanging(value);
					this.SendPropertyChanging();
					this._InPrice = value;
					this.SendPropertyChanged("InPrice");
					this.OnInPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InMoney", DbType="Float")]
		public System.Nullable<double> InMoney
		{
			get
			{
				return this._InMoney;
			}
			set
			{
				if ((this._InMoney != value))
				{
					this.OnInMoneyChanging(value);
					this.SendPropertyChanging();
					this._InMoney = value;
					this.SendPropertyChanged("InMoney");
					this.OnInMoneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TB_Goods_TB_InWarehouse", Storage="_TB_Goods", ThisKey="GoodsID", OtherKey="ID", IsForeignKey=true)]
		public TB_Goods TB_Goods
		{
			get
			{
				return this._TB_Goods.Entity;
			}
			set
			{
				TB_Goods previousValue = this._TB_Goods.Entity;
				if (((previousValue != value) 
							|| (this._TB_Goods.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TB_Goods.Entity = null;
						previousValue.TB_InWarehouse.Remove(this);
					}
					this._TB_Goods.Entity = value;
					if ((value != null))
					{
						value.TB_InWarehouse.Add(this);
						this._GoodsID = value.ID;
					}
					else
					{
						this._GoodsID = default(string);
					}
					this.SendPropertyChanged("TB_Goods");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TB_OutWarehouse")]
	public partial class TB_OutWarehouse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _GoodsID;
		
		private System.Nullable<double> _NowCount;
		
		private System.Nullable<double> _OutCount;
		
		private string _OutUser;
		
		private System.Nullable<System.DateTime> _OutDate;
		
		private string _OutRemarks;
		
		private System.Nullable<double> _OutPrice;
		
		private System.Nullable<double> _OutMoney;
		
		private EntityRef<TB_Goods> _TB_Goods;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnGoodsIDChanging(string value);
    partial void OnGoodsIDChanged();
    partial void OnNowCountChanging(System.Nullable<double> value);
    partial void OnNowCountChanged();
    partial void OnOutCountChanging(System.Nullable<double> value);
    partial void OnOutCountChanged();
    partial void OnOutUserChanging(string value);
    partial void OnOutUserChanged();
    partial void OnOutDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOutDateChanged();
    partial void OnOutRemarksChanging(string value);
    partial void OnOutRemarksChanged();
    partial void OnOutPriceChanging(System.Nullable<double> value);
    partial void OnOutPriceChanged();
    partial void OnOutMoneyChanging(System.Nullable<double> value);
    partial void OnOutMoneyChanged();
    #endregion
		
		public TB_OutWarehouse()
		{
			this._TB_Goods = default(EntityRef<TB_Goods>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoodsID", DbType="VarChar(32)")]
		public string GoodsID
		{
			get
			{
				return this._GoodsID;
			}
			set
			{
				if ((this._GoodsID != value))
				{
					if (this._TB_Goods.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGoodsIDChanging(value);
					this.SendPropertyChanging();
					this._GoodsID = value;
					this.SendPropertyChanged("GoodsID");
					this.OnGoodsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NowCount", DbType="Float")]
		public System.Nullable<double> NowCount
		{
			get
			{
				return this._NowCount;
			}
			set
			{
				if ((this._NowCount != value))
				{
					this.OnNowCountChanging(value);
					this.SendPropertyChanging();
					this._NowCount = value;
					this.SendPropertyChanged("NowCount");
					this.OnNowCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutCount", DbType="Float")]
		public System.Nullable<double> OutCount
		{
			get
			{
				return this._OutCount;
			}
			set
			{
				if ((this._OutCount != value))
				{
					this.OnOutCountChanging(value);
					this.SendPropertyChanging();
					this._OutCount = value;
					this.SendPropertyChanged("OutCount");
					this.OnOutCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutUser", DbType="VarChar(32)")]
		public string OutUser
		{
			get
			{
				return this._OutUser;
			}
			set
			{
				if ((this._OutUser != value))
				{
					this.OnOutUserChanging(value);
					this.SendPropertyChanging();
					this._OutUser = value;
					this.SendPropertyChanged("OutUser");
					this.OnOutUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> OutDate
		{
			get
			{
				return this._OutDate;
			}
			set
			{
				if ((this._OutDate != value))
				{
					this.OnOutDateChanging(value);
					this.SendPropertyChanging();
					this._OutDate = value;
					this.SendPropertyChanged("OutDate");
					this.OnOutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutRemarks", DbType="VarChar(500)")]
		public string OutRemarks
		{
			get
			{
				return this._OutRemarks;
			}
			set
			{
				if ((this._OutRemarks != value))
				{
					this.OnOutRemarksChanging(value);
					this.SendPropertyChanging();
					this._OutRemarks = value;
					this.SendPropertyChanged("OutRemarks");
					this.OnOutRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutPrice", DbType="Float")]
		public System.Nullable<double> OutPrice
		{
			get
			{
				return this._OutPrice;
			}
			set
			{
				if ((this._OutPrice != value))
				{
					this.OnOutPriceChanging(value);
					this.SendPropertyChanging();
					this._OutPrice = value;
					this.SendPropertyChanged("OutPrice");
					this.OnOutPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutMoney", DbType="Float")]
		public System.Nullable<double> OutMoney
		{
			get
			{
				return this._OutMoney;
			}
			set
			{
				if ((this._OutMoney != value))
				{
					this.OnOutMoneyChanging(value);
					this.SendPropertyChanging();
					this._OutMoney = value;
					this.SendPropertyChanged("OutMoney");
					this.OnOutMoneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TB_Goods_TB_OutWarehouse", Storage="_TB_Goods", ThisKey="GoodsID", OtherKey="ID", IsForeignKey=true)]
		public TB_Goods TB_Goods
		{
			get
			{
				return this._TB_Goods.Entity;
			}
			set
			{
				TB_Goods previousValue = this._TB_Goods.Entity;
				if (((previousValue != value) 
							|| (this._TB_Goods.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TB_Goods.Entity = null;
						previousValue.TB_OutWarehouse.Remove(this);
					}
					this._TB_Goods.Entity = value;
					if ((value != null))
					{
						value.TB_OutWarehouse.Add(this);
						this._GoodsID = value.ID;
					}
					else
					{
						this._GoodsID = default(string);
					}
					this.SendPropertyChanged("TB_Goods");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TB_Goods")]
	public partial class TB_Goods : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Name;
		
		private string _Image;
		
		private string _BrandID;
		
		private System.Nullable<double> _Counts;
		
		private string _Remarks;
		
		private string _CreateUser;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<double> _CostMoney;
		
		private System.Nullable<double> _SoldMoney;
		
		private EntitySet<TB_InWarehouse> _TB_InWarehouse;
		
		private EntitySet<TB_OutWarehouse> _TB_OutWarehouse;
		
		private EntityRef<TB_Brand> _TB_Brand;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnBrandIDChanging(string value);
    partial void OnBrandIDChanged();
    partial void OnCountsChanging(System.Nullable<double> value);
    partial void OnCountsChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnCreateUserChanging(string value);
    partial void OnCreateUserChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnCostMoneyChanging(System.Nullable<double> value);
    partial void OnCostMoneyChanged();
    partial void OnSoldMoneyChanging(System.Nullable<double> value);
    partial void OnSoldMoneyChanged();
    #endregion
		
		public TB_Goods()
		{
			this._TB_InWarehouse = new EntitySet<TB_InWarehouse>(new Action<TB_InWarehouse>(this.attach_TB_InWarehouse), new Action<TB_InWarehouse>(this.detach_TB_InWarehouse));
			this._TB_OutWarehouse = new EntitySet<TB_OutWarehouse>(new Action<TB_OutWarehouse>(this.attach_TB_OutWarehouse), new Action<TB_OutWarehouse>(this.detach_TB_OutWarehouse));
			this._TB_Brand = default(EntityRef<TB_Brand>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="VarChar(200)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandID", DbType="VarChar(32)")]
		public string BrandID
		{
			get
			{
				return this._BrandID;
			}
			set
			{
				if ((this._BrandID != value))
				{
					if (this._TB_Brand.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBrandIDChanging(value);
					this.SendPropertyChanging();
					this._BrandID = value;
					this.SendPropertyChanged("BrandID");
					this.OnBrandIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Counts", DbType="Float")]
		public System.Nullable<double> Counts
		{
			get
			{
				return this._Counts;
			}
			set
			{
				if ((this._Counts != value))
				{
					this.OnCountsChanging(value);
					this.SendPropertyChanging();
					this._Counts = value;
					this.SendPropertyChanged("Counts");
					this.OnCountsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="VarChar(500)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUser", DbType="VarChar(32)")]
		public string CreateUser
		{
			get
			{
				return this._CreateUser;
			}
			set
			{
				if ((this._CreateUser != value))
				{
					this.OnCreateUserChanging(value);
					this.SendPropertyChanging();
					this._CreateUser = value;
					this.SendPropertyChanged("CreateUser");
					this.OnCreateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostMoney", DbType="Float")]
		public System.Nullable<double> CostMoney
		{
			get
			{
				return this._CostMoney;
			}
			set
			{
				if ((this._CostMoney != value))
				{
					this.OnCostMoneyChanging(value);
					this.SendPropertyChanging();
					this._CostMoney = value;
					this.SendPropertyChanged("CostMoney");
					this.OnCostMoneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoldMoney", DbType="Float")]
		public System.Nullable<double> SoldMoney
		{
			get
			{
				return this._SoldMoney;
			}
			set
			{
				if ((this._SoldMoney != value))
				{
					this.OnSoldMoneyChanging(value);
					this.SendPropertyChanging();
					this._SoldMoney = value;
					this.SendPropertyChanged("SoldMoney");
					this.OnSoldMoneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TB_Goods_TB_InWarehouse", Storage="_TB_InWarehouse", ThisKey="ID", OtherKey="GoodsID")]
		public EntitySet<TB_InWarehouse> TB_InWarehouse
		{
			get
			{
				return this._TB_InWarehouse;
			}
			set
			{
				this._TB_InWarehouse.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TB_Goods_TB_OutWarehouse", Storage="_TB_OutWarehouse", ThisKey="ID", OtherKey="GoodsID")]
		public EntitySet<TB_OutWarehouse> TB_OutWarehouse
		{
			get
			{
				return this._TB_OutWarehouse;
			}
			set
			{
				this._TB_OutWarehouse.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TB_Brand_TB_Goods", Storage="_TB_Brand", ThisKey="BrandID", OtherKey="ID", IsForeignKey=true)]
		public TB_Brand TB_Brand
		{
			get
			{
				return this._TB_Brand.Entity;
			}
			set
			{
				TB_Brand previousValue = this._TB_Brand.Entity;
				if (((previousValue != value) 
							|| (this._TB_Brand.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TB_Brand.Entity = null;
						previousValue.TB_Goods.Remove(this);
					}
					this._TB_Brand.Entity = value;
					if ((value != null))
					{
						value.TB_Goods.Add(this);
						this._BrandID = value.ID;
					}
					else
					{
						this._BrandID = default(string);
					}
					this.SendPropertyChanged("TB_Brand");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TB_InWarehouse(TB_InWarehouse entity)
		{
			this.SendPropertyChanging();
			entity.TB_Goods = this;
		}
		
		private void detach_TB_InWarehouse(TB_InWarehouse entity)
		{
			this.SendPropertyChanging();
			entity.TB_Goods = null;
		}
		
		private void attach_TB_OutWarehouse(TB_OutWarehouse entity)
		{
			this.SendPropertyChanging();
			entity.TB_Goods = this;
		}
		
		private void detach_TB_OutWarehouse(TB_OutWarehouse entity)
		{
			this.SendPropertyChanging();
			entity.TB_Goods = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TB_User")]
	public partial class TB_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _UserName;
		
		private string _LoginName;
		
		private string _PassWord;
		
		private string _IsShow;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _Remarks;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLoginNameChanging(string value);
    partial void OnLoginNameChanged();
    partial void OnPassWordChanging(string value);
    partial void OnPassWordChanged();
    partial void OnIsShowChanging(string value);
    partial void OnIsShowChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    #endregion
		
		public TB_User()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginName", DbType="VarChar(50)")]
		public string LoginName
		{
			get
			{
				return this._LoginName;
			}
			set
			{
				if ((this._LoginName != value))
				{
					this.OnLoginNameChanging(value);
					this.SendPropertyChanging();
					this._LoginName = value;
					this.SendPropertyChanged("LoginName");
					this.OnLoginNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassWord", DbType="VarChar(50)")]
		public string PassWord
		{
			get
			{
				return this._PassWord;
			}
			set
			{
				if ((this._PassWord != value))
				{
					this.OnPassWordChanging(value);
					this.SendPropertyChanging();
					this._PassWord = value;
					this.SendPropertyChanged("PassWord");
					this.OnPassWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsShow", DbType="VarChar(1)")]
		public string IsShow
		{
			get
			{
				return this._IsShow;
			}
			set
			{
				if ((this._IsShow != value))
				{
					this.OnIsShowChanging(value);
					this.SendPropertyChanging();
					this._IsShow = value;
					this.SendPropertyChanged("IsShow");
					this.OnIsShowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="VarChar(500)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
